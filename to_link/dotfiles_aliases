#!/bin/bash

alias now="date +%Y%m%d_%Hh%M"

alias c='$(unset RUSTC_WRAPPER; code .)'
alias a="atom ."
alias aa="atom -a ."
alias k="clear; tmux clear-history"
alias n="nvim"
alias nv="nvim"
alias v="nvim"

alias tma="tmux a"

function fa() {
	find . -name ${1} -exec atom {} \;
}

alias uofo="while [[ 0 ]]; do sleep 5 && ssh uofo; done"
alias primus="while [[ 0 ]]; do sleep 5 && ssh primus; done"
alias eai="while [[ 0 ]]; do sleep 2 && ssh eai; done"

alias sublime="/Applications/Sublime\ Text.app/Contents/MacOS/Sublime\ Text &> /dev/null"
alias p4m="/Applications/p4merge.app/Contents/Resources/launchp4merge"

function cdm()
{
    mkdir -p ${1}
    cd $_
}


function cdnow()
{
    current_date=`now`
    mkdir -p ${current_date}
    cd ${current_date}
}

# function less()
# {
#     # Requires GNU Source-highlight (http://www.gnu.org/software/src-highlite/)
#     # Gentoo: dev-util/source-highlight
#     # ArchLinux: extra/source-highlight
#     less_bin=`which less`
#     if [[ "`which src-hilite-lesspipe.sh 2> /dev/null`" == "" ]]; then
#         ${less_bin} ${@}
#     else
#         src-hilite-lesspipe.sh ${@} | ${less_bin}
#     fi
# }

alias resource="source ~/.bashrc"
alias r="resource"

alias locate='locate -i'
#alias grep='grep -n'
alias nano='nano -w'
#alias screen="screen -U -R"
alias df="df -h --print-type"
alias du="du -h -d 1"
alias free='free -m'
alias grpe='grep'
alias top="htop"
alias untar="tar -xvf"
alias pingg="ping -c 3 www.google.com"
function pss() {
	#ps auxf | grep -i "$@" | grep -v grep | grep --color=auto -i "$@"
    ps aux | grep -i "$@" | grep -v grep | grep --color=auto -i "$@"
}
alias pstree="ps axjf | less"
alias scpr='rsync --partial --progress'

alias dc='cd'
alias rm='rm -i'

alias cdt='cd ~/Downloads'


############################
# Functions

function aur() {
    cd ${HOME}/aur
    package=${1}
    git clone https://aur.archlinux.org/${package}.git
    cd ${package}
    echo "--------------------------"
    echo "Start 'makepkg'? [Y/n]"
    read -s answer
    if [[ "$answer" == "" || "$answer" == "Y" || "$answer" == "y" || "$answer" == "yes" || "$answer" == "oui" || "$answer" == "o" ]]; then
        makepkg
    fi
}


alias glg='git log --graph        --pretty=format:"%C(green)%h %C(reset)%C(magenta)%G? %C(reset) %s %C(blue)by %an (%ar) %C(red) %d"'
alias glag='git log --graph --all --pretty=format:"%C(green)%h %C(reset)%C(magenta)%G?%C(reset)%C(red)%d %C(reset) %s %C(blue)by %an (%ar)"'
alias gl='git log --graph        --pretty=format:"%C(green)%h %C(reset) %s %C(blue)by %an (%ar) %C(red) %d"'
alias gla='git log --graph --all --pretty=format:"%C(green)%h %C(reset)%C(red)%d%C(reset) %s %C(blue)by %an (%ar)"'
alias glm='gl --first-parent master'


alias gg='gitg 2> /dev/null &'
alias gu='git gui &'
alias gk='gitk --all &'
alias gps='git push'
alias gpl='git pull'
alias gpp='git pull --prune'

# http://www.catonmat.net/blog/git-aliases/
alias ga='git add'
alias gp='git push'
alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gm='git commit -m'
alias gma='git commit -am'
alias gb='git branch --all --verbose'
alias gci='git init && git commit --allow-empty -m "Initial commit"'
alias gc='git checkout'
alias gra='git remote add'
alias grr='git remote rm'
alias gpu='git pull'
alias gcl='git clone'


function check_memory() {
    while [ 1 ]; do pmap -d `pidof $1` | grep writeable | sed "s|K||g" | awk '{print ""$4" KiB    "$4/1024" MiB    "$4/1024/1024" GiB"}' ; sleep 0.1 ;done 2> /dev/null
}
alias cm=check_memory


alias bru="brew update && brew upgrade && brew cleanup"

posix_ls_args="-l -h -G"
if [[ -x "$(command -v exa)" ]]; then
    # Use 'exa' as 'ls' replacement
    # See https://the.exa.website/
    # alias ls="exa --binary --group --git --header --long"
    alias ls="exa --binary --group --header --long"
else
    alias ls="ls ${posix_ls_args}"
fi
alias l='ls'
alias ll="/bin/ls ${posix_ls_args}"

alias la="ls -a"
# Call this to update tmux's forwarded ssh agent
# https://stackoverflow.com/a/40967729
alias fixssh='export $(tmux showenv SSH_AUTH_SOCK)'
zbat() {
    cat "${@}" | gunzip | bat
}

zxt() {
    zbat "${@}" | xsv table | bat --wrap never
}

xbat() {
    cat "${@}" | xsv table | bat --wrap never
}

alias cdtmp='cd $(mktemp -d)'

rust_musl_builder() {
    rust_version="1.34.1"
    # NOTE: The first time cargo is run through this, it's going to fail.
    # To fix, run this command:
    #   sudo chown -R rust:rust /home/rust/.cargo/git /home/rust/.cargo/registry /home/rust/src/target
    # Following invocations will work.
    # Reference: https://hub.docker.com/r/ekidd/rust-musl-builder/
    cmd="docker run --rm -it
        -v cargo-git:/home/rust/.cargo/git
        -v cargo-registry:/home/rust/.cargo/registry
        -v target:/home/rust/src/target
        -v \$(pwd):/home/rust/src ekidd/rust-musl-builder:${rust_version}
        ${@}"
    echo ${cmd}
    eval ${cmd}
}
