# set prefix key to ctrl+a until I have time to adapt
unbind C-b
set -g prefix C-a

# send the prefix to client inside window (ala nested sessions)
#bind-key a send-prefix

set-window-option -g mode-keys vi

# ----------------------------------------------------------------------------------------------------------------
# Configurations

# scrollback buffer n lines
set -g history-limit 1000000

# listen for activity on all windows
#set -g bell-action any

# on-screen time for display-panes in ms
#set -g display-panes-time 2000
#set -g display-time 2000

# start window indexing at one instead of zero
set -g base-index 1

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux.#I.#W"
#set-option -g set-titles-string '#S:#I.#P #W'


# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr default

# default window title colors
set-window-option -g window-status-fg cyan
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# center align the window list
set -g status-justify right

# show some useful stats but only when tmux is started
# outside of Xorg, otherwise dwm statusbar shows these already
set -g status-right ""
set -g status-left ""
set -g status-left-length  100
set -g status-right-length 50
# set -g status-left "[#[fg=green] #T #[default]] [#[fg=blue] #{pane_current_path} #[default]]"
set -g status-left "[#[fg=green] #T #[default]]"
set -g status-right "[ #[fg=magenta]#(cat /proc/loadavg | cut -d \" \" -f 1,2,3)#[default] ][ #[fg=cyan,bright]%a %Y-%m-%d %H:%M #[default]]"

# Set window notifications
# http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/
#set-window-option -g monitor-activity on
#set -g visual-activity on

# Automatically set window title
# http://stackoverflow.com/a/25186977
set-window-option -g automatic-rename on


# # Select split pane with mouse
# #set -g mouse-select-pane on
# # Mouse mode re-written in tmux 2.1.
# # See http://superuser.com/a/988688/94531
# set -g mouse on
# # OSX:
# #bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
# # Linux: tmux-next does not have the -e argument to copy-mode (aka exit copy-mode when scrolling at bottom)
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode'"

# resize a window based on the smallest client actually viewing it, not on the smallest one attached to the entire session.
set-window-option -g aggressive-resize on


#source "/usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf"


# ----------------------------------------------------------------------------------------------------------------
# Key bindins

# Reload configuration
unbind r
bind r source-file ~/.tmux.conf
#bind r source-file ~/.tmux.conf; display "Tmux config reloaded"

# Clear tmux buffer
#bind -n C-k clear-history
bind-key C-k clear-history

# Toggle last window like screen
bind-key C-a last-window

# Kill window or server with confirmation
bind-key k confirm kill-window
bind-key K confirm kill-server

## toggle statusbar
bind-key b set-option status

# ctrl+left/right cycles thru windows
#bind-key -n C-right next
#bind-key -n C-left prev
# alt+left/right cycles thru windows
bind-key -n M-right next
bind-key -n M-left prev

# Open a man page in new window
#bind / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind '~' split-window "exec htop"

# Move window (tab) left or right with Ctrl+Shift+{Left,Right}
# http://superuser.com/questions/343572/how-do-i-reorder-tmux-windows/552493#552493
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Save history to a file
# http://unix.stackexchange.com/questions/26548/write-all-tmux-scrollback-to-a-file
# Shortcut: ctrl+a, shift+p
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S - ; save-buffer %1 ; delete-buffer'

# Copy and Paste
# When in copy mode:
#  vim shortcuts:
#     'v' to start selection
#     'y' to end selection (copy selection)
#  default tmux shortcuts:
#     'space' to start selection
#     'enter' to end selection (copy selection)
#bind-key -t vi-copy 'v' begin-selection
##bind-key -t vi-copy 'y' copy-selection
## http://apple.stackexchange.com/a/210521
#bind-key -t vi-copy 'y' copy-pipe "pbcopy"
# ctrl+a, p: paste
bind-key p paste-buffer
# Default tmux paste: ctrl+a, ]

# ----------------------------------------------------------------------------------------------------------------
# Plugins
# https://github.com/tmux-plugins/tpm

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# https://github.com/tmux-plugins/tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-yank: integrate with clipboard
#set -g @plugin 'tmux-plugins/tmux-yank'

# Automatically install tpm and plugins if not present
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
