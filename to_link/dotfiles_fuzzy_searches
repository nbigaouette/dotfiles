# https://github.com/junegunn/fzf/

alias nf='nvim $(fzf --height 40%)'

# -----------------------------------------------------------------------------
# https://junegunn.kr/2015/03/fzf-tmux/
# https://github.com/junegunn/fzf/wiki/examples#tmux
# tm - create new tmux session, or switch to existing one. Works from within tmux too. (@bag-man)
# `tm` will allow you to select your tmux session via fzf.
# `tm irc` will attach to the irc session (if it exists), else it will create it.

tm() {
  [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
  if [ $1 ]; then 
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}

# -----------------------------------------------------------------------------
# Change ssh keys in agent, useful for pushing to github using different accounts
fsa() {
  sshkey=$(find ~/.ssh -name id_*.pub | sed "s|.pub||g" | fzf --height=5%)
  ssh-add -D
  ssh-add ${sshkey}
}


# -----------------------------------------------------------------------------
# Git

# git merge --no-ff <branch>
alias fgmb='git merge --no-ff $(git branch | fzf --height 40%)'


# git checkout <branch>
fbr() {
  local branches branch
  branches=$(git branch) &&
  branch=$(echo "$branches" | fzf-tmux -d 15 +m) &&
  git checkout $(echo "$branch" | sed "s/.* //")
}

# Git add (modified files)
fga() {
  files_list=($(git ls-files --modified | fzf --height 30%))
  if [[ ${#files_list[*]} -gt 0 ]]; then
    git add ${files_list[*]}
  fi
}
# Git add (untracked files)
fgao() {
  files_list=($(git ls-files --others | fzf --height 30%))
  if [[ ${#files_list[*]} -gt 0 ]]; then
    git add ${files_list[*]}
  fi
}

# Git reset (remove from index)
fgr() {
  files_list=($(git diff --name-only --cached | fzf --height 30%))
  if [[ ${#files_list[*]} -gt 0 ]]; then
    git reset HEAD ${files_list[*]}
  fi
}

# Git checkout -- (discard changes)
fgd() {
  files_list=($(git ls-files --modified | fzf --height 30%))
  if [[ ${#files_list[*]} -gt 0 ]]; then
    git checkout -- ${files_list[*]}
  fi
}


